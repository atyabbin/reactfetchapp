{"ast":null,"code":"var _jsxFileName = \"/Users/abj/Desktop/reac/intern/src/App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FetchApi() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const apiGet = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(json => {\n      console.log(json);\n      setPosts(json);\n    });\n  };\n\n  // Function to render table rows based on the posts data\n  const renderTableRows = () => {\n    return posts.map(post => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: post.userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: post.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: apiGet,\n        children: \"FETCH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), posts.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Post ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: renderTableRows()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(FetchApi, \"QFg9xhJ0x9yrnvUQrdhfY5IZlDs=\");\n_c = FetchApi;\nvar _c;\n$RefreshReg$(_c, \"FetchApi\");","map":{"version":3,"names":["FetchApi","_s","posts","setPosts","useState","apiGet","fetch","then","response","json","console","log","renderTableRows","map","post","_jsxDEV","children","userId","fileName","_jsxFileName","lineNumber","columnNumber","id","title","body","_Fragment","onClick","length","border","_c","$RefreshReg$"],"sources":["/Users/abj/Desktop/reac/intern/src/App.js"],"sourcesContent":["export default function FetchApi() {\n    const [posts, setPosts] = useState([]);\n  \n    const apiGet = () => {\n      fetch(\"https://jsonplaceholder.typicode.com/posts\")\n        .then((response) => response.json())\n        .then((json) => {\n          console.log(json);\n          setPosts(json);\n        });\n    };\n  \n    // Function to render table rows based on the posts data\n    const renderTableRows = () => {\n      return posts.map((post) => (\n        <tr key={post.id}>\n          <td>{post.userId}</td>\n          <td>{post.id}</td>\n          <td>{post.title}</td>\n          <td>{post.body}</td>\n        </tr>\n      ));\n    };\n  \n    return (\n      <>\n        <div>\n          <br />\n          <button onClick={apiGet}>FETCH</button>\n          <br />\n          {posts.length > 0 && (\n            <table border=\"1\">\n              <thead>\n                <tr>\n                  <th>User ID</th>\n                  <th>Post ID</th>\n                  <th>Title</th>\n                  <th>Body</th>\n                </tr>\n              </thead>\n              <tbody>{renderTableRows()}</tbody>\n            </table>\n          )}\n        </div>\n      </>\n    );\n  }\n  \n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}